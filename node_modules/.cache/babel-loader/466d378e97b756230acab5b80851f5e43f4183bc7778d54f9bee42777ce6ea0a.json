{"ast":null,"code":"import{useState,useEffect}from\"react\";const useLocalStorage=(key,initialValue)=>{const[storedValue,setStoredValue]=useState(()=>{try{const item=window.localStorage.getItem(key);return item?JSON.parse(item):initialValue;}catch(error){console.error(error);return initialValue;}});useEffect(()=>{window.localStorage.setItem(key,JSON.stringify(storedValue));},[key,storedValue]);return[storedValue,setStoredValue];};export default useLocalStorage;","map":{"version":3,"names":["useState","useEffect","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","setItem","stringify"],"sources":["C:/Users/trapk/Desktop/recipe-finder/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            console.error(error);\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(storedValue));\r\n    }, [key, storedValue]);\r\n\r\n    return [storedValue, setStoredValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,KAAM,CAAAC,eAAe,CAAGA,CAACC,GAAG,CAAEC,YAAY,GAAK,CAC3C,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGN,QAAQ,CAAC,IAAM,CACjD,GAAI,CACA,KAAM,CAAAO,IAAI,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,CAC7C,MAAO,CAAAI,IAAI,CAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAGH,YAAY,CACjD,CAAE,MAAOS,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACpB,MAAO,CAAAT,YAAY,CACvB,CACJ,CAAC,CAAC,CAEFH,SAAS,CAAC,IAAM,CACZO,MAAM,CAACC,YAAY,CAACM,OAAO,CAACZ,GAAG,CAAEQ,IAAI,CAACK,SAAS,CAACX,WAAW,CAAC,CAAC,CACjE,CAAC,CAAE,CAACF,GAAG,CAAEE,WAAW,CAAC,CAAC,CAEtB,MAAO,CAACA,WAAW,CAAEC,cAAc,CAAC,CACxC,CAAC,CAED,cAAe,CAAAJ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}